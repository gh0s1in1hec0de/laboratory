// TODO ADD `OP` FIELDS WITH ACTUAL CRC32 HASHES IN CONSTRUCTOR TAG

// TOKEN LAUNCH
sale_config# fut_jet_deployed_balance:Coins fut_jet_wallet_address:Coins total_tons_collected:Coins
             creator_fut_jet_limit:Coins creator_fut_jet_balance:Coins creator_fut_jet_price:Coins creator_round_end_time:int32
             wl_fut_jet_limit:Coins wl_ton_limit:Coins wl_pass_util_jet_amount:Coins wl_burn_util_jet_amount:Coins wl_ton_invested_total:Coins wl_end_time:int32
             pub_fut_jet_limit:Coins pub_fut_jet_sold:Coins synthetic_jet_reserve:Coins synthetic_ton_reserve:Coins pub_end_time:int32
             user_vault_code:^Cell = SaleData;
jet_tools#   util_jet_wallet_address:MsgAddressInt fut_jet_master_address:MsgAddressInt
             metadata:^Cell fut_jet_master_code:^Cell wallet_code:^Cell = JetTools;

storage# is_initialized:int1 fut_jet_total_supply:Coins min_ton_for_sale_success:Coins fut_jet_dex_amount:Coins fut_jet_platform_amount:Coins reward_util_jets_total_amount:Coins
         operational_needs:Coins fut_jet_cur_balance:Coins reward_util_jets_cur_balance:Coins
         chief_address:MsgAddressInt creator_address: MsgAddressInt
         sale_data: ^SaleData jet_tools: ^JetTools = TokenLaunchStorage;

init# fut_jet_wallet_address:MsgAddressInt util_jet_wallet_address:MsgAddressInt fut_jet_master_address:MsgAddressInt = TokenLaunchMsg;
// Buys
creator_buyout# query_id:uint64 = TokenLaunchMsg;
public_buy# query_id:uint64 = TokenLaunchMsg;
wl_callback# query_id:uint64 should_burn:int1 initiator:MsgAddressInt = TokenLaunchMsg;
// Claims
refund_request# query_id:uint64 mode:uint4 refund_value:Coins = TokenLaunchMsg;
refund_confirmation# query_id:uint64 wl_tons:Coins pub_tons:Coins jettons:Coins recipient:MsgAddressInt = TokenLaunchMsg;
jetton_claim_request# query_id:uint64 = TokenLaunchMsg;
jetton_claim_confirmation# query_id:uint64 wl_tons:Coins pub_tons:Coins jettons:Coins recipient:MsgAddressInt = TokenLaunchMsg;
//Utils
deploy_jet# query_id:uint64 = TokenLaunchMsg;
upgrade#2508d66a query_id:uint64 new_data:^Cell new_code:^Cell = TokenLaunchMsg;


// USER VAULT
storage# owner:MsgAddressInt wl_invested:Coins public_invested:Coins token_balance:Coins = UserVaultStorage;

balance_update# query_id:uint64 mode:uint4 tons:Coins fut_jettons:Coins = BalanceUpdate;

// TODO Core tlb & periphery messages
